name: Build for Windows

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: self-hosted

    steps:
      # Step 1: Set PowerShell Execution Policy
      - name: Set PowerShell Execution Policy
        shell: powershell
        run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

      # Step 2: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 3: Get the release version from the tag
      - name: Get the release version from the tag
        shell: powershell
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $env:GITHUB_ENV

      # Step 4: Install Rust (Windows)
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Step 5: Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      # Step 6: Build the extension
      - name: Build Extension
        run: cargo build --release --target x86_64-pc-windows-msvc

      # Step 7: Build archive
      - name: Build archive
        shell: powershell
        run: |
          # Replace with the name of your binary
          $binary_name = "libsql_php"
          
          $str_version = "${{ env.VERSION }}"
          $version = $str_version -replace 'turso-php-extension/', ''
          
          $dirname = "$binary_name-$version-php-8.3-windows"
          mkdir $dirname
          Copy-Item "target\x86_64-pc-windows-msvc\release\$binary_name.dll" $dirname

          & "C:\Program Files\7-Zip\7z.exe" a "$dirname.zip" $dirname
          echo "ASSET=$dirname.zip" >> $env:GITHUB_ENV

      # Step 8: Upload release asset
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
